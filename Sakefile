/*globals FileList, CLEAN, Task, task, file, sh */

var infuse = require("infuse"),
    prereqs = new FileList("test/sample-src.js", "./test/sample-module.js")
;

prereqs.include(infuse("test/sample-src.js", {dumpPaths: true}).split("\n"));

function infuseTask (to, nominify, embed) {
    var cmd = "infuse " + prereqs.items[0] + " " + to;
    
    cmd += " -d " + prereqs.items[1];
    
    cmd += (nominify ? " -N" : "");
    cmd += (embed ? " -E" : "");
    
    file(to, prereqs, function (t) {
        cmd += (t.exists ? " -F" : "");
        sh(cmd);
    });
}

CLEAN.include("sample.js", "sample.*.js");
CLEAN.include("examples/defines/script.js", "examples/defines/script.min.js");

infuseTask("sample.js", true);
infuseTask("sample.min.js");
infuseTask("sample.embed.js", true, true);
infuseTask("sample.embed.min.js", false, true);

file(
    "examples/defines/script.js",
    [
        "examples/defines/my-script.js",
        "./examples/defines/my-defines.js"
    ],
    function (t) {
        var prereqs = t.prerequisites;
        sh([
            "infuse", prereqs[0], t.name, "-d", prereqs[1], "-N -F"
        ].join(" "));
    }
);

file(
    "examples/defines/script.min.js",
    [
        "examples/defines/my-script.js",
        "./examples/defines/my-defines.js"
    ],
    function (t) {
        var prereqs = t.prerequisites;
        sh([
            "infuse", prereqs[0], t.name, "-d", prereqs[1], "-F"
        ].join(" "));
    }
);

task("samples", [
    "sample.js",
    "sample.min.js",
    "sample.embed.js",
    "sample.embed.min.js"
]);

task("examples", ["examples/defines/script.js", "examples/defines/script.min.js"]);
