
var Proteus = require("proteus");

/**
 * A very simple class for defining a rule.
 */
module.exports = Proteus.Class.derive({
    
    init: function () {
        /**
         * The list of selectors for this rule.
         * @property {Array} selectors
         */
        this.selectors = [];
    },
    /**
     * Append a selector to this rule.
     * @method addSelector
     * @param {Object} sel a InfuseAstSelector instance
     * @returns {Number} the length of #selectors
     */
    addSelector: function (sel) {
        this.selectors.push(sel);
    },
    /**
     * Test if the passed node matches this rule.
     * 
     * @param {Object} node a InfuseAstNodeWrapper object
     * @returns {Boolean}
     */
    test: function (node) {
        var selectors = this.selectors,
            i = selectors.length,
            sel,
            result
        ;
        
        while (i--) {
            sel = selectors[i];
            
            if (!(result = sel.test(node))) {
                return false;
            }
            
            if (typeof result !== "boolean") {
                node = result;
            }
        }
        
        return true;
    }
});