
var Proteus = require("proteus");

function makePropertySpecifier () {
    var fn, spec;
    
    fn = function () {
        fn.subject.push.apply(fn.subject, Proteus.slice(arguments));
        return fn;
    };
    
    spec = Object.defineProperties(fn, {

        a: { get: function () {
            return fn;
        } },

        list: { get: function () {
            Object.defineProperty(fn.subject, "isList", { value: true });
            return fn;
        } },
        
        one: { get: function () {
            return this.a;
        } },
        
        of: { get: function () {
            return this.list;
        } },

        minimum: { value: function (val) {
            Object.defineProperty(fn.subject, "count", { value: val });
            return fn;
        } },

        reset: { value: function () {
            delete fn.subject;
            delete fn.context;
        } },

        valueOf: { value: function () {
            return fn.subject;
        } },
        
        destroy: { value: function () {
            fn.reset();
            fn = null;
            spec = null;
        } }

    });
    
    spec.subject = [];
    
    return spec;
}

Object.defineProperties(module.exports, {
    is: { get: function () {
        return makePropertySpecifier();
    } },
    
    a: { get: function () {
        return makePropertySpecifier();
    } }
});
