
var Proteus = require("proteus"),
    isArray = Array.isArray,
    Spec
;

/**
 * Node Objects are definitions of acceptable objects in the JavaScript AST.
 * 
 * They provide information about the key and their values
 */
module.exports = Spec = Proteus.Class.derive(Object.defineProperties({
    
    init: function () {
        var args = Proteus.slice(arguments),
            name = args[0],
            interfaces = [],
            iface,
            arg, props,
            len, i
        ;
        
        for (i = 1, len = args.length; i < len; i++) {
            arg = args[i];
            if (typeof arg === "string") {
                iface = Spec[arg];
                if (!iface) {
                    throw Error("No Spec named '" + arg + "'");
                }
                interfaces.push(arg);
            }
            else if (typeof arg === "object" && !isArray(arg)){
                props = arg;
                break;
            }
        }

        this.name = name;
        this.interfaces = interfaces;
        
        if (props) {
            props = Object.keys(props).reduce(function (acc, key) {
                var val = props[key];
                acc[key] = val.valueOf();
                val.destroy();
                return acc;
            }, {});
        }
        
        this.properties = props || {};
        
        Spec[name] = this;
    }
    
}, {
    
}));