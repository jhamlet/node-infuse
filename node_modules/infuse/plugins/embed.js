
var plugins = require('../plugins'),
    Ast = require('infuse/ast');

module.exports = {
    
    type: 'embed',
    
    run: function (src, opts) {
        var self = this,
            ast = new Ast({
                source: src,
                parser: opts.comments ? {
                        comment: true,
                        tokens: true,
                        range: true
                    } : {},
                generator: opts.minify ? {
                        format: {
                            compact: true,
                            indent: {
                                style: '',
                                base: 0
                            }
                        }
                    } : {}
            });
        
        this.stringifyOptions = ast.options.generate;
        
        ast.query('assign.right > objexp').forEach(function (node) {
            var assignNode  = node.parent,
                leftNode    = assignNode.left,
                leftObj     = leftNode.object,
                objIsR      = leftObj && leftObj.name === '$r',
                leftProp    = leftNode.property,
                propIsMod   = leftProp && leftProp.name === 'modules',
                properties;
            
            if (objIsR && propIsMod) {
                properties = node.getChildNodes('properties');
                node.alter({
                    properties: properties.map(self.stringify, self)
                });
            }
        });
        
        return ast.source;
    },
    
    stringify: function (node) {
        var value = node.value;
        
        value.alter({
            type: 'Literal',
            value: '(' + value.toString(this.stringifyOptions) + ')()'
        });

        node.alter({
            value: value
        });

        return node;
    }
};

plugins.register('embed', module.exports);
