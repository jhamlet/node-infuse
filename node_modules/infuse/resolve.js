
var resolve     = require('resolve'),
    nodePath    = process.env.NODE_PATH,
    nodePaths   = nodePath && nodePath.split(':'),
    isArray     = Array.isArray
;

/**
 * @param {String} name name or path to resolve
 * @param {String} basepath optional, the base directory path to start from
 * @param {Array} nodelib optional, the list of node library directories to
 *      search for core modules.
 * @returns {String} path to the module
 * @throws {Error} if no nodelib argument given and name resolves to a core
 *      module.
 */
module.exports = function (name, basepath, nodelib) {
    var opts = {},
        isCore = resolve.isCore(name),
        path;
    
    if (arguments.length === 2 && isArray(basepath)) {
        nodelib = basepath;
        basepath = null;
    }
    
    if (isCore && !nodelib) {
        throw new Error('No nodelib specified for core module \'' + name + '\' resolution.');
    }
    else if (isCore) {
        path = resolve.sync(name, { paths: nodelib });
    }
    
    if (basepath) {
        // Try resolving it from the base path first...
        try {
            path = resolve.sync(name, { basedir: basepath });
        }
        catch (e) {
            // now try the global paths...
            path = resolve.sync(name, { paths: nodePaths });
        }
    }
    else {
        path = resolve.sync(name, { paths: nodePaths });
    }
    
    return path;
};
