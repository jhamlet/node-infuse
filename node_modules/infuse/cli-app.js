
var Proteus = require('proteus'),
    infuse  = require('infuse'),
    FS      = require('fs')
;
/**
 * This is basically a command-line wrapper for the infuse function.
 * 
 * We just pass on the appropriate options, and, depending on the result
 * of the function call, format the output correctly.
 */
module.exports = new (Proteus.Class.derive(Object.defineProperties({
    
    run: function () {
        var opts = this.options,
            result,
            outstream;
        
        result = infuse.sync({
            file:        opts.infile,
            comments:    opts.comments,
            embed:       opts.embed,
            infusions:   opts.infusions,
            modules:     opts.modules,
            nodelib:     opts.nodelib,
            definitions: opts.definitions,
            requires:    opts.requires,
            minifier:    opts.minify,
            minifyOpts:  opts.minifyOpts,
            dump:        opts.dumpAst ? 'ast' : opts.dumpModules ? 'modules' : null
        });
        
        outstream = opts.outfile ?
            FS.createWriteStream(opts.outfile, { encoding: 'utf8' }) :
            process.stdout;

        if (opts.dumpAst) {
            result = JSON.stringify(result);
        }
        else if (opts.dumpModules) {
            result = result.join('\n') + '\n';
        }

        outstream.write(result);
    }
    
}, {
    
    options: {
        get: function () {
            var opts = require('./options');
            Object.defineProperty(this, 'options', { value: opts, enumerable: true });
            return opts;
        },
        enumerable: true
    }
    
})))();
